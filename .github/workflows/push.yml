name: GitHub Actions
on: [ push ]
env:
  TEST_TENANT_ID: 9b85ee6f-4fb0-4a46-8cb7-4dcc6b262a89
  TEST_CLIENT_ID: 3a4162fa-43d4-4de7-a8c1-be3bc7765a8c
  TEST_CLIENT_SECRET: ${{ secrets.TEST_CLIENT_SECRET }}
  TEST_KEY_VAULT_URL: https://ci-object-encryptor.vault.azure.net/
  TEST_AWS_REGION: eu-central-1
  TEST_AWS_ACCESS_KEY_ID: AKIAW7VKHVHOHQU7WE7R
  TEST_AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
  TEST_AWS_KMS_KEY_ID: c474f77b-65db-4778-975b-6f167e27d385
  TEST_AWS_ROLE_ID: arn:aws:iam::480319613404:role/ci-object-encryptor-role
  TEST_GCP_KMS_KEY_ID: projects/kbc-ci-platform-services/locations/global/keyRings/ci-object-encryptor/cryptoKeys/ci-object-encryptor
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Google Login
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.TEST_GCP_SERVICE_ACCOUNT_KEY }}
          export_environment_variables: true
          create_credentials_file: true

      - name: Build image
        run: |          
          docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"
          docker-compose build
      - name: Run tests
        run: |
          # GCP login generates `GOOGLE_APPLICATION_CREDENTIALS` environment variable, but for tests we need 
          # `TEST_GOOGLE_APPLICATION_CREDENTIALS` which is assigned to the `GOOGLE_APPLICATION_CREDENTIALS` when needed.  
          # https://github.com/google-github-actions/auth#other-inputs
          export TEST_GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS
          
          docker-compose run ci
