<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ObjectEncryptor.php" path="/">
    <totals>
      <lines total="336" comments="95" code="241" executable="106" executed="102" percent="96.23"/>
      <methods count="17" tested="14" percent="82.35"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Keboola\ObjectEncryptor\ObjectEncryptor" start="17" executable="106" executed="102" crap="67">
      <package full="" name="" sub="" category=""/>
      <namespace name="Keboola\ObjectEncryptor"/>
      <method name="__construct" signature="__construct(Encryptor $legacyEncryptor = null)" start="36" end="39" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="encrypt" signature="encrypt($data, $wrapperName = BaseWrapper::class)" start="47" end="69" crap="8" executable="13" executed="13" coverage="100"/>
      <method name="decrypt" signature="decrypt($data)" start="77" end="93" crap="6.05" executable="9" executed="8" coverage="88.888888888889"/>
      <method name="pushWrapper" signature="pushWrapper(CryptoWrapperInterface $wrapper)" start="101" end="107" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="getRegisteredComponentWrapperClass" signature="getRegisteredComponentWrapperClass()" start="109" end="117" crap="4" executable="4" executed="4" coverage="100"/>
      <method name="getRegisteredProjectWrapperClass" signature="getRegisteredProjectWrapperClass()" start="119" end="127" crap="4" executable="4" executed="4" coverage="100"/>
      <method name="getRegisteredConfigurationWrapperClass" signature="getRegisteredConfigurationWrapperClass()" start="129" end="137" crap="4" executable="4" executed="4" coverage="100"/>
      <method name="findWrapper" signature="findWrapper($value)" start="145" end="157" crap="4" executable="7" executed="7" coverage="100"/>
      <method name="decryptLegacy" signature="decryptLegacy($value)" start="159" end="173" crap="3.04" executable="6" executed="5" coverage="83.333333333333"/>
      <method name="decryptValue" signature="decryptValue($value)" start="181" end="199" crap="5.20" executable="10" executed="8" coverage="80"/>
      <method name="encryptItem" signature="encryptItem($key, $value, CryptoWrapperInterface $wrapper)" start="208" end="225" crap="7" executable="10" executed="10" coverage="100"/>
      <method name="encryptValue" signature="encryptValue($value, CryptoWrapperInterface $wrapper)" start="233" end="245" crap="3" executable="5" executed="5" coverage="100"/>
      <method name="encryptArray" signature="encryptArray(array $data, CryptoWrapperInterface $wrapper)" start="253" end="260" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="encryptObject" signature="encryptObject(\stdClass $data, CryptoWrapperInterface $wrapper)" start="268" end="275" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="decryptItem" signature="decryptItem($key, $value)" start="284" end="305" crap="8" executable="12" executed="12" coverage="100"/>
      <method name="decryptObject" signature="decryptObject(\stdClass $data)" start="313" end="320" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="decryptArray" signature="decryptArray(array $data)" start="328" end="335" crap="2" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="38">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testInvalidKeysLegacyEncryption"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testInvalidWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNoWrappers"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCrypt"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCryptNoRequire"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="39">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testInvalidKeysLegacyEncryption"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testInvalidWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNoWrappers"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCrypt"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCryptNoRequire"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="50">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNoWrappers"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="51">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="52">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="53">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="56">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNoWrappers"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="57">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNoWrappers"/>
      </line>
      <line nr="59">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="60">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
      </line>
      <line nr="62">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="63">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
      </line>
      <line nr="65">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="66">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="68">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
      </line>
      <line nr="79">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="81">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="82">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="86">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="87">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
      </line>
      <line nr="89">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="90">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="92">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
      </line>
      <line nr="103">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testInvalidWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCrypt"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCryptNoRequire"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="104">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testInvalidWrapper"/>
      </line>
      <line nr="106">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testInvalidWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCrypt"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCryptNoRequire"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="107">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidEncrypt with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorInvalidService"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testInvalidWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCrypt"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyNoMCryptNoRequire"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="111">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
      </line>
      <line nr="112">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
      </line>
      <line nr="113">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-component&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-component&quot;"/>
      </line>
      <line nr="116">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #0"/>
      </line>
      <line nr="121">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
      </line>
      <line nr="122">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
      </line>
      <line nr="123">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-project&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-project&quot;"/>
      </line>
      <line nr="126">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #1"/>
      </line>
      <line nr="131">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="132">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="133">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-akv-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;kms-configuration&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperEncryptor with data set &quot;akv-configuration&quot;"/>
      </line>
      <line nr="136">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testGetRegisteredWrapperFailure with data set #2"/>
      </line>
      <line nr="147">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="148">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="149">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
      </line>
      <line nr="151">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="152">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="153">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="156">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="163">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="164">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
      </line>
      <line nr="165">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
      </line>
      <line nr="168">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
      </line>
      <line nr="171">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="183">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorEmpty"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="184">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="185">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapperInvalidDecrypt with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacy"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorLegacyFail"/>
      </line>
      <line nr="188">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="189">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
      </line>
      <line nr="191">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
      </line>
      <line nr="192">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
      </line>
      <line nr="193">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
      </line>
      <line nr="210">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="211">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="212">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="214">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="216">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="217">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="218">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="219">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="221">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
      </line>
      <line nr="222">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
      </line>
      <line nr="236">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="237">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
      </line>
      <line nr="241">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponentProject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyComponent"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testFactoryLegacyBase"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testConfigurationWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testProjectWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testComponentWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;KMS&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapper with data set &quot;AKV&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorScalar"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStack with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorAlreadyEncryptedWrapper"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="242">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
      </line>
      <line nr="243">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #0"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testGenericWrapperInvalidCredentials with data set #1"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorStackNoCredentials"/>
      </line>
      <line nr="255">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="256">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="257">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="259">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="270">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="271">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="272">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="274">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="286">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="287">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="289">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="290">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
      </line>
      <line nr="291">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
      </line>
      <line nr="294">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="296">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="297">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="298">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="299">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="301">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
      </line>
      <line nr="302">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
      </line>
      <line nr="315">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="316">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="317">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="319">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyObject"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="330">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="331">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="332">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorFactoryTest::testCipherError"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorUnsupportedInput with data set &quot;invalid class in encrypted value&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;somewhat similar in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testDecryptorInvalidCipherText with data set &quot;completely off in key&quot;"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
      <line nr="334">
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayScalars"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorSimpleArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArrayKeyHashmark"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayEncrypted"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedArrayWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorNestedObjectWithArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testMixedCryptoWrappersDecryptArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptEmptyArray"/>
        <covered by="Keboola\ObjectEncryptor\Tests\ObjectEncryptorTest::testEncryptorDecodedJSONObject"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UserException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Legacy</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Encryptor</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Legacy</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BaseWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ComponentAKVWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ComponentKMSWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ConfigurationAKVWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ConfigurationKMSWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CryptoWrapperInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ProjectAKVWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Keboola</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectEncryptor</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Wrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ProjectKMSWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ObjectEncryptor</token>
      </line>
      <line no="18">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * List of known wrappers.</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @var CryptoWrapperInterface[]</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrappers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * Encryptor used only for decrypting legacy cipher texts.</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @var Encryptor|null</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$legacyEncryptor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30"/>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * ObjectEncryptor constructor.</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * @param Encryptor|null $legacyEncryptor Optional legacy decryptor.</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Encryptor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$legacyEncryptor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">legacyEncryptor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$legacyEncryptor</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @param string|array|\stdClass $data Data to encrypt</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     * @param string $wrapperName Class name of encryptor wrapper</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">encrypt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapperName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseWrapper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @var BaseWrapper $wrapper */</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cryptoWrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$cryptoWrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapperName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cryptoWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid crypto wrapper '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapperName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptObject</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Only stdClass, array and string are supported types for encryption.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="70"/>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     * @param mixed $data</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     * @throws UserException</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">decrypt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">InvalidCiphertextException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_a</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptObject</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Only stdClass, array and string are supported types for decryption.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="96">
        <token name="T_DOC_COMMENT">     * Manually add a known crypto wrapper. Generally, wrappers should be added to services.yml with tag</token>
      </line>
      <line no="97">
        <token name="T_DOC_COMMENT">     * 'syrup.encryption.wrapper' - that way, they will be added automatically.</token>
      </line>
      <line no="98">
        <token name="T_DOC_COMMENT">     * @param CryptoWrapperInterface $wrapper</token>
      </line>
      <line no="99">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="100">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pushWrapper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CryptoWrapperInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'CryptoWrapper prefix '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' is not unique.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="108"/>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRegisteredComponentWrapperClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ComponentKMSWrapper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ComponentAKVWrapper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'No Component wrappers registered.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="118"/>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRegisteredProjectWrapperClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProjectKMSWrapper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ProjectAKVWrapper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'No Project wrappers registered.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128"/>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRegisteredConfigurationWrapperClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ConfigurationKMSWrapper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ConfigurationAKVWrapper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'No Configuration wrappers registered.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="138"/>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     * Find a wrapper to decrypt a given cipher.</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     * @param string $value Cipher text</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">     * @return CryptoWrapperInterface|null</token>
      </line>
      <line no="143">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="144">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">findWrapper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$selectedWrapper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'There are no wrappers registered for the encryptor.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wrappers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$selectedWrapper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$selectedWrapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="158"/>
      <line no="159">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">decryptLegacy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">/* @ is intentional to suppress warnings from invalid cipher texts which</token>
      </line>
      <line no="162">
        <token name="T_COMMENT">        are handled by checking return === false */</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">legacyEncryptor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$ret</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AT">@</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">legacyEncryptor</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decrypt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ret</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Value is not an encrypted value.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ret</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Value is not an encrypted value.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="174"/>
      <line no="175">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="176">
        <token name="T_DOC_COMMENT">     * @param string $value Value to decrypt.</token>
      </line>
      <line no="177">
        <token name="T_DOC_COMMENT">     * @return string Decrypted value.</token>
      </line>
      <line no="178">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="179">
        <token name="T_DOC_COMMENT">     * @throws UserException</token>
      </line>
      <line no="180">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">decryptValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findWrapper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptLegacy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">            </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decrypt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">InvalidCiphertextException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// this is for legacy wrappers</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Value </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> is not an encrypted value.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UserException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Value </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> is not an encrypted value.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// decryption failed for more serious reasons</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Decryption failed: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="200"/>
      <line no="201">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="202">
        <token name="T_DOC_COMMENT">     * @param string $key Array key</token>
      </line>
      <line no="203">
        <token name="T_DOC_COMMENT">     * @param array|string|\stdClass|null $value Value to encrypt.</token>
      </line>
      <line no="204">
        <token name="T_DOC_COMMENT">     * @param CryptoWrapperInterface $wrapper</token>
      </line>
      <line no="205">
        <token name="T_DOC_COMMENT">     * @return array|string|\stdClass|null</token>
      </line>
      <line no="206">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="207">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">encryptItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CryptoWrapperInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptObject</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid item $key - only stdClass, array and scalar can be encrypted.'</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="226"/>
      <line no="227">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="228">
        <token name="T_DOC_COMMENT">     * @param string $value Value to encrypt.</token>
      </line>
      <line no="229">
        <token name="T_DOC_COMMENT">     * @param CryptoWrapperInterface $wrapper Ciphering wrapper.</token>
      </line>
      <line no="230">
        <token name="T_DOC_COMMENT">     * @return string Encrypted value.</token>
      </line>
      <line no="231">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="232">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">encryptValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CryptoWrapperInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// return self if already encrypted with any wrapper</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findWrapper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="239"/>
      <line no="240">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encrypt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Encryption failed: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="246"/>
      <line no="247">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="248">
        <token name="T_DOC_COMMENT">     * @param array $data</token>
      </line>
      <line no="249">
        <token name="T_DOC_COMMENT">     * @param CryptoWrapperInterface $wrapper</token>
      </line>
      <line no="250">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="251">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="252">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">encryptArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CryptoWrapperInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="261"/>
      <line no="262">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="263">
        <token name="T_DOC_COMMENT">     * @param \stdClass $data</token>
      </line>
      <line no="264">
        <token name="T_DOC_COMMENT">     * @param CryptoWrapperInterface $wrapper</token>
      </line>
      <line no="265">
        <token name="T_DOC_COMMENT">     * @return \stdClass</token>
      </line>
      <line no="266">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="267">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">encryptObject</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CryptoWrapperInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_object_vars</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encryptItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wrapper</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="276"/>
      <line no="277">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="278">
        <token name="T_DOC_COMMENT">     * @param string $key Key in array.</token>
      </line>
      <line no="279">
        <token name="T_DOC_COMMENT">     * @param array|string|\stdClass|null $value Value to decrypt.</token>
      </line>
      <line no="280">
        <token name="T_DOC_COMMENT">     * @return array|string|\stdClass|null Decrypted value.</token>
      </line>
      <line no="281">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="282">
        <token name="T_DOC_COMMENT">     * @throws UserException</token>
      </line>
      <line no="283">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">decryptItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="287">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">                </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UserException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Invalid cipher text for key </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="293">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="294">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="296">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="297">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptObject</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApplicationException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Invalid item </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> - only stdClass, array and scalar can be decrypted.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="304">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="305">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="306"/>
      <line no="307">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="308">
        <token name="T_DOC_COMMENT">     * @param \stdClass $data</token>
      </line>
      <line no="309">
        <token name="T_DOC_COMMENT">     * @return \stdClass</token>
      </line>
      <line no="310">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="311">
        <token name="T_DOC_COMMENT">     * @throws UserException</token>
      </line>
      <line no="312">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">decryptObject</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">stdClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_object_vars</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="319">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="320">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="321"/>
      <line no="322">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="323">
        <token name="T_DOC_COMMENT">     * @param array $data</token>
      </line>
      <line no="324">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="325">
        <token name="T_DOC_COMMENT">     * @throws ApplicationException</token>
      </line>
      <line no="326">
        <token name="T_DOC_COMMENT">     * @throws UserException</token>
      </line>
      <line no="327">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">decryptArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="331">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="332">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">decryptItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="333">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="335">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="336">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="337"/>
    </source>
  </file>
</phpunit>
